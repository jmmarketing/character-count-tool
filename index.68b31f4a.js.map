{"mappings":"A,S,E,C,E,O,G,E,U,C,E,O,C,C,C,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,A,C,E,E,Q,A,E,Q,S,C,C,C,E,O,c,C,E,O,C,W,C,I,I,E,I,A,G,E,E,W,C,E,a,C,C,GCEA,IAgBA,EAhBI,EAAU,IAAI,IAgBlB,EAfA,SAAkB,CAAO,CAAE,CAAQ,EACjC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAS,MAAM,CAAG,EAAG,GAAK,EAC5C,EAAQ,GAAG,CAAC,CAAQ,CAAC,EAAE,CAAE,CACvB,QAAS,EACT,KAAM,CAAQ,CAAC,EAAI,EAAE,AACvB,EAEJ,C,GCVA,AAAA,EAAA,SAAA,QAAA,CAA8C,IAAA,IAAoB,GAAA,YAAA,GAAA,EAAI,QAAQ,GAAG,KAAK,KAAK,CAAC,uQEkBrF,IAAI,EAAQ,CACjB,WAAY,EACZ,MAAO,EACP,UAAW,EACX,SAAU,EACV,QAAS,CAAC,CACZ,E,I,E,C,EExBA,EAAiB,IAAA,IAAoB,gDAAA,YAAA,GAAA,EAAiD,QAAQ,G,I,E,C,ECA9F,EAAiB,IAAA,IAAoB,iDAAA,YAAA,GAAA,EAAkD,QAAQ,G,I,E,C,ECA/F,EAAiB,IAAA,IAAoB,yCAAA,YAAA,GAAA,EAA0C,QAAQ,G,I,E,C,ECAvF,EAAiB,IAAA,IAAoB,0CAAA,YAAA,GAAA,EAA2C,QAAQ,EJKxF,OAAM,EACJ,QAAU,SAAS,aAAa,CAAC,iBAAkB,AACnD,CAAA,YAAc,SAAS,aAAa,CAAC,uBAAwB,AAC7D,CAAA,aAAe,SAAS,aAAa,CAAC,OAAQ,AAC9C,CAAA,aAAe,SAAS,aAAa,CAAC,eAAgB,AAEtD,CAAA,SAAW,CACT,KAAM,OACN,MAAO,CACL,KAAM,WAAA,EAAA,EAAA,GACN,MAAO,WAAA,EAAA,EAAA,EACT,EACA,MAAO,CACL,KAAM,WAAA,EAA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","sources":["<anon>","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-7a726a30e270f424.js","src/js/controller.js","src/js/model.js","src/js/views/modeToggleView.js","node_modules/@parcel/runtime-js/lib/runtime-b6c42b792ed937c3.js","node_modules/@parcel/runtime-js/lib/runtime-04f84fc1d4cd9ec0.js","node_modules/@parcel/runtime-js/lib/runtime-87084e076b5317c7.js","node_modules/@parcel/runtime-js/lib/runtime-7fdaa4b426cc26c0.js","src/js/views/inputView.js","src/js/views/statsView.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire1189\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire1189\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"27Lyk\", function(module, exports) {\n\n$parcel$export(module.exports, \"register\", () => $18c11f3350a906ea$export$6503ec6e8aabbaf, (v) => $18c11f3350a906ea$export$6503ec6e8aabbaf = v);\nvar $18c11f3350a906ea$export$6503ec6e8aabbaf;\nvar $18c11f3350a906ea$export$f7ad0328861e2f03;\n\"use strict\";\nvar $18c11f3350a906ea$var$mapping = new Map();\nfunction $18c11f3350a906ea$var$register(baseUrl, manifest) {\n    for(var i = 0; i < manifest.length - 1; i += 2)$18c11f3350a906ea$var$mapping.set(manifest[i], {\n        baseUrl: baseUrl,\n        path: manifest[i + 1]\n    });\n}\nfunction $18c11f3350a906ea$var$resolve(id) {\n    var resolved = $18c11f3350a906ea$var$mapping.get(id);\n    if (resolved == null) throw new Error(\"Could not resolve bundle with id \" + id);\n    return new URL(resolved.path, resolved.baseUrl).toString();\n}\n$18c11f3350a906ea$export$6503ec6e8aabbaf = $18c11f3350a906ea$var$register;\n$18c11f3350a906ea$export$f7ad0328861e2f03 = $18c11f3350a906ea$var$resolve;\n\n});\n\nvar $f032b982fc9b56dc$exports = {};\n\n(parcelRequire(\"27Lyk\")).register(new URL(\"\", import.meta.url).toString(), JSON.parse('[\"f9fpV\",\"index.68b31f4a.js\",\"essV5\",\"logo-dark-theme.0a964e4a.svg\",\"4tg3i\",\"logo-light-theme.61e66f6c.svg\",\"hpAF3\",\"icon-sun.303e5cfc.svg\",\"gHCMP\",\"icon-moon.340264e4.svg\"]'));\n\n/*\r\nMode view toggles light dark modes.\r\nInput view captures input and settings. \r\nStats view updates DOM . \r\n*/ //Psuedo code:\n/* What calculations and states need to be recognized and done:\r\n- Is Exclude Spaces checked?\r\n- Is there a Chracter limit? \r\n    -- Both of these could be passed as parameters with default set to false. \r\n\r\n- Total input (string) needs to be recieved. \r\n- Length = Characters (+/- spaces)\r\n- Spaces = Word Count\r\n- Periods = Sentence count. \r\n- Letter Density\r\n    - Reduce over string and increase count based on letter (MDN has example i think). \r\n- Time Read = Need to come up with equation. Word count / avg words read a minute? Round up to closest minute. 180/min\r\n\r\nOut put should be one data object. \r\n\r\n*/ let $0f1d4402dffacf5b$export$7804429c45dff272 = {\n    characters: 0,\n    words: 0,\n    sentences: 0,\n    readtime: 0,\n    density: {}\n};\nfunction $0f1d4402dffacf5b$export$48de5e0a65e3a653(obj) {\n    console.log(\"compileStat Function is called!\");\n    $0f1d4402dffacf5b$var$charCount(obj.input, obj.spaces);\n    $0f1d4402dffacf5b$var$wordCount(obj.input);\n    $0f1d4402dffacf5b$var$sentenceCount(obj.input);\n    $0f1d4402dffacf5b$var$readTime($0f1d4402dffacf5b$export$7804429c45dff272.words);\n    $0f1d4402dffacf5b$var$letterDensity(obj.input);\n    // console.log(stats);\n    return $0f1d4402dffacf5b$export$7804429c45dff272;\n}\nfunction $0f1d4402dffacf5b$var$charCount(string, spaces = false) {\n    const spacesCount = string.split(\" \").length - 1;\n    const characterCount = string.length;\n    $0f1d4402dffacf5b$export$7804429c45dff272.characters = spaces ? characterCount - spacesCount : characterCount;\n}\nfunction $0f1d4402dffacf5b$var$wordCount(string) {\n    const words = string.trim().split(\" \").length;\n    $0f1d4402dffacf5b$export$7804429c45dff272.words = words;\n}\nfunction $0f1d4402dffacf5b$var$sentenceCount(string) {\n    const sentences = string.trim().split(/[.!?]/).length - 1;\n    $0f1d4402dffacf5b$export$7804429c45dff272.sentences = sentences;\n}\nfunction $0f1d4402dffacf5b$var$readTime(num) {\n    const time = +(num / 180).toFixed(2);\n    $0f1d4402dffacf5b$export$7804429c45dff272.readtime = time;\n}\nfunction $0f1d4402dffacf5b$var$letterDensity(string) {\n    $0f1d4402dffacf5b$export$7804429c45dff272.density = {};\n    const characterCount = string.length - (string.split(\" \").length - 1);\n    const letters = string.toLowerCase().split(\"\").filter((l)=>!/[ .!?]/.test(l));\n    for (const letter of letters){\n        let letterStat = $0f1d4402dffacf5b$export$7804429c45dff272.density[letter];\n        if (!letterStat) {\n            letterStat = {\n                count: 0,\n                percent: 0\n            };\n            $0f1d4402dffacf5b$export$7804429c45dff272.density[letter] = letterStat;\n        }\n        letterStat.count++;\n        letterStat.percent = +($0f1d4402dffacf5b$export$7804429c45dff272.density[letter].count / characterCount).toFixed(2);\n    }\n}\n\n\nvar $6b59893396abafda$exports = {};\n$6b59893396abafda$exports = new URL(\"logo-dark-theme.0a964e4a.svg\", import.meta.url).toString();\n\n\nvar $2b17e3e0fea969d0$exports = {};\n$2b17e3e0fea969d0$exports = new URL(\"logo-light-theme.61e66f6c.svg\", import.meta.url).toString();\n\n\nvar $4f144ae6385fdc83$exports = {};\n$4f144ae6385fdc83$exports = new URL(\"icon-sun.303e5cfc.svg\", import.meta.url).toString();\n\n\nvar $6df386e07576f960$exports = {};\n$6df386e07576f960$exports = new URL(\"icon-moon.340264e4.svg\", import.meta.url).toString();\n\n\nclass $28639d494b9d66f0$var$ModeToggleView {\n    _toggle = document.querySelector(\".header-toggle\");\n    _toggleIcon = document.querySelector(\".header-toggle__icon\");\n    _bodyElement = document.querySelector(\"body\");\n    _logoElement = document.querySelector(\".header-logo\");\n    _display = {\n        mode: \"dark\",\n        logos: {\n            dark: (0, (/*@__PURE__*/$parcel$interopDefault($6b59893396abafda$exports))),\n            light: (0, (/*@__PURE__*/$parcel$interopDefault($2b17e3e0fea969d0$exports)))\n        },\n        icons: {\n            dark: (0, (/*@__PURE__*/$parcel$interopDefault($4f144ae6385fdc83$exports))),\n            light: (0, (/*@__PURE__*/$parcel$interopDefault($6df386e07576f960$exports)))\n        }\n    };\n    addToggleEventHandler(eventFunction) {\n        this._toggle.addEventListener(\"click\", eventFunction);\n    }\n    _toggleModeElements() {\n        this._toggleIcon.setAttribute(\"src\", this._display.icons[this._display.mode]);\n        this._logoElement.setAttribute(\"src\", this._display.logos[this._display.mode]);\n    }\n    changeMode() {\n        const isDark = !this._bodyElement.dataset.theme;\n        if (isDark) {\n            this._bodyElement.dataset.theme = \"light\";\n            this._display.mode = \"light\";\n        } else {\n            delete this._bodyElement.dataset.theme;\n            this._display.mode = \"dark\";\n        }\n        this._toggleModeElements();\n    }\n}\nvar $28639d494b9d66f0$export$2e2bcd8739ae039 = new $28639d494b9d66f0$var$ModeToggleView();\n\n\nclass $54207738217c2206$var$InputView {\n    _input = document.querySelector(\".input-textarea\");\n    _spacesOption = document.querySelector(\"#spaces\");\n    _characterOption = document.querySelector(\"#limit\");\n    _limit = document.querySelector(\"#limit-count\");\n    _errorElement = document.querySelector(\".error-message\");\n    _inputData = {\n        input: null,\n        spaces: false,\n        limit: null,\n        error: false\n    };\n    constructor(){\n        this._init();\n    }\n    _init() {\n        this._characterOption.addEventListener(\"change\", this._toggleCharacterLimit.bind(this));\n        this._limit.addEventListener(\"change\", this._setCharacterLimit.bind(this));\n        this._input.addEventListener(\"keyup\", this._getInputString.bind(this));\n        this._spacesOption.addEventListener(\"change\", this._toggleExcludeSpaces.bind(this));\n    }\n    addHandlerSendInputData(handler) {\n        [\n            this._characterOption,\n            this._limit,\n            this._spacesOption\n        ].map((element)=>element.addEventListener(\"change\", handler));\n        this._input.addEventListener(\"keyup\", handler);\n    }\n    getInputData() {\n        return this._inputData;\n    }\n    _toggleExcludeSpaces() {\n        this._inputData.spaces = !this._inputData.spaces;\n    // console.log(this._inputData);\n    }\n    _toggleCharacterLimit() {\n        if (this._characterOption.checked) this._limit.classList.remove(\"hide\");\n        else {\n            this._limit.classList.add(\"hide\");\n            this._inputData.limit = null;\n            this._limit.value = \"\";\n        }\n        this._toggleError();\n    // console.log(this._inputData);\n    }\n    _setCharacterLimit() {\n        const characterLimit = this._limit.valueAsNumber;\n        this._inputData.limit = characterLimit;\n        this._toggleError();\n    }\n    _getInputString() {\n        const inputString = this._input.value;\n        this._inputData.input = inputString;\n        this._toggleError();\n    }\n    _toggleError() {\n        const str = this._inputData.input;\n        const limit = this._inputData.limit;\n        if (!Number.isFinite(limit) || !str) {\n            this._input.classList.remove(\"invalid\");\n            this._inputData.error = false;\n            return;\n        }\n        if (str.length > limit) {\n            this._markupError();\n            this._input.classList.add(\"invalid\");\n            this._inputData.error = true;\n            return;\n        }\n        this._input.classList.remove(\"invalid\");\n        this._inputData.error = false;\n    }\n    _markupError() {\n        this._errorElement.textContent = `\\u{24D8} Limit reached! Your text exceeds ${this._inputData.limit} characters.`;\n    }\n}\nvar $54207738217c2206$export$2e2bcd8739ae039 = new $54207738217c2206$var$InputView();\n\n\n/*\r\nFor the Reading time, and number counters we can just render those with basic innerText methods. \r\n\r\nLetter density and see more will be trickier. Initial approach:\r\n    - Take density data object and map through with html, and append to parent conatiner.\r\n    - Set a max height for density container and set overflow to hidden. When See more is clicked we update the styling to fit-content. Seems simple enough. \r\n\r\n*/ class $fd3b802b6fc95ceb$var$StatsView {\n    _readingTime = document.querySelector(\"#reading-time\");\n    _characters = document.querySelector(\"#characters\");\n    _words = document.querySelector(\"#words\");\n    _sentences = document.querySelector(\"#sentences\");\n    _densityContainer = document.querySelector(\".letters__container\");\n    _noCharacterMessage = document.querySelector(\"#no-characters\");\n    _seeMoreElement = document.querySelector(\".see-more\");\n    constructor(){\n        this._seeMoreElement.addEventListener(\"click\", this._showMore.bind(this));\n    }\n    renderStatistics(dataStatsObj) {\n        const { characters: characters, words: words, sentences: sentences, readtime: readtime, density: density } = dataStatsObj;\n        this._renderReadingTime(readtime);\n        this._renderCountNumbers(characters, words, sentences);\n        this._renderDensity(density);\n    }\n    _renderReadingTime(num) {\n        this._readingTime.textContent = num < 1 ? \"<1\" : Math.ceil(num);\n    }\n    _renderCountNumbers(characters = 0, words = 0, sentences = 0) {\n        this._characters.textContent = characters;\n        this._words.textContent = words;\n        this._sentences.textContent = sentences;\n    }\n    _showMore() {\n        const isOpen = Boolean(+this._seeMoreElement.dataset.open);\n        console.log(isOpen);\n        if (!isOpen) {\n            this._densityContainer.style.maxHeight = \"fit-content\";\n            this._seeMoreElement.textContent = \"See less\";\n            this._seeMoreElement.dataset.open = 1;\n        }\n        if (isOpen) {\n            console.log(isOpen);\n            this._densityContainer.style.cssText = \"\";\n            this._seeMoreElement.textContent = \"See more\";\n            this._seeMoreElement.dataset.open = 0;\n        }\n    }\n    _renderDensity(obj) {\n        const sortedLetters = Object.keys(obj).map((letter)=>({\n                letter: letter,\n                ...obj[letter]\n            })).sort((a, b)=>b.count - a.count);\n        console.log(sortedLetters);\n        const lettersHTML = sortedLetters.map((l)=>{\n            const { letter: letter, count: count, percent: percent } = l;\n            return `\r\n      <div class=\"letters__item\">\r\n        <p class=\"label letters__letter\">${letter.toUpperCase()}</p>\r\n        <div class=\"letters__bar\">\r\n            <div class=\"letters__bar--fill\" style=\"width: ${percent * 100}%\"></div>\r\n        </div>\r\n        <p class=\"label letters__percent\">${count} (${(percent * 100).toFixed(2)}%)</p>\r\n      </div>\r\n      `;\n        }).join(\" \");\n        /* Possible refactor into own function */ this._densityContainer.classList.remove(\"hide\");\n        this._noCharacterMessage.classList.add(\"hide\");\n        this._seeMoreElement.classList.remove(\"hide\");\n        /* ------ */ this._densityContainer.innerHTML = \"\";\n        this._densityContainer.insertAdjacentHTML(\"beforeend\", lettersHTML);\n    }\n    clearStatistics() {\n        this._densityContainer.classList.add(\"hide\");\n        this._noCharacterMessage.classList.remove(\"hide\");\n        this._seeMoreElement.classList.add(\"hide\");\n        this._renderCountNumbers();\n    }\n}\nvar $fd3b802b6fc95ceb$export$2e2bcd8739ae039 = new $fd3b802b6fc95ceb$var$StatsView();\n\n\nconst $f50bd1f2915ed0f2$var$controlModeToggle = function() {\n    (0, $28639d494b9d66f0$export$2e2bcd8739ae039).changeMode();\n};\nconst $f50bd1f2915ed0f2$var$controlGetInputData = function() {\n    const data = (0, $54207738217c2206$export$2e2bcd8739ae039).getInputData();\n    console.warn(\"HERE IS YOUR DATA\");\n    if (data.error || !data.input) // statsView.clearStatistics();\n    return;\n     //Reset to 0 & 'no character' function needed for statsView?\n    const dataStats = $0f1d4402dffacf5b$export$48de5e0a65e3a653(data);\n    console.log(dataStats);\n    $f50bd1f2915ed0f2$var$controlRenderStats(dataStats);\n};\nconst $f50bd1f2915ed0f2$var$controlRenderStats = function(obj) {\n    (0, $fd3b802b6fc95ceb$export$2e2bcd8739ae039).renderStatistics(obj);\n};\nfunction $f50bd1f2915ed0f2$var$init() {\n    (0, $28639d494b9d66f0$export$2e2bcd8739ae039).addToggleEventHandler($f50bd1f2915ed0f2$var$controlModeToggle);\n    (0, $54207738217c2206$export$2e2bcd8739ae039).addHandlerSendInputData($f50bd1f2915ed0f2$var$controlGetInputData);\n}\n$f50bd1f2915ed0f2$var$init();\n\n\n//# sourceMappingURL=index.68b31f4a.js.map\n","\"use strict\";\n\nvar mapping = new Map();\nfunction register(baseUrl, manifest) {\n  for (var i = 0; i < manifest.length - 1; i += 2) {\n    mapping.set(manifest[i], {\n      baseUrl: baseUrl,\n      path: manifest[i + 1]\n    });\n  }\n}\nfunction resolve(id) {\n  var resolved = mapping.get(id);\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n  return new URL(resolved.path, resolved.baseUrl).toString();\n}\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(new __parcel__URL__(\"\").toString(),JSON.parse(\"[\\\"f9fpV\\\",\\\"index.68b31f4a.js\\\",\\\"essV5\\\",\\\"logo-dark-theme.0a964e4a.svg\\\",\\\"4tg3i\\\",\\\"logo-light-theme.61e66f6c.svg\\\",\\\"hpAF3\\\",\\\"icon-sun.303e5cfc.svg\\\",\\\"gHCMP\\\",\\\"icon-moon.340264e4.svg\\\"]\"));","/*\r\nMode view toggles light dark modes.\r\nInput view captures input and settings. \r\nStats view updates DOM . \r\n*/\r\nimport * as model from \"./model.js\";\r\nimport toggleView from \"./views/modeToggleView.js\";\r\nimport inputView from \"./views/inputView.js\";\r\nimport statsView from \"./views/statsView.js\";\r\n\r\nconst controlModeToggle = function () {\r\n  toggleView.changeMode();\r\n};\r\n\r\nconst controlGetInputData = function () {\r\n  const data = inputView.getInputData();\r\n  console.warn(\"HERE IS YOUR DATA\");\r\n\r\n  if (data.error || !data.input) {\r\n    // statsView.clearStatistics();\r\n    return;\r\n  } //Reset to 0 & 'no character' function needed for statsView?\r\n\r\n  const dataStats = model.compileStats(data);\r\n  console.log(dataStats);\r\n\r\n  controlRenderStats(dataStats);\r\n};\r\n\r\nconst controlRenderStats = function (obj) {\r\n  statsView.renderStatistics(obj);\r\n};\r\n\r\nfunction init() {\r\n  toggleView.addToggleEventHandler(controlModeToggle);\r\n  inputView.addHandlerSendInputData(controlGetInputData);\r\n}\r\n\r\ninit();\r\n","//Psuedo code:\r\n/* What calculations and states need to be recognized and done:\r\n- Is Exclude Spaces checked?\r\n- Is there a Chracter limit? \r\n    -- Both of these could be passed as parameters with default set to false. \r\n\r\n- Total input (string) needs to be recieved. \r\n- Length = Characters (+/- spaces)\r\n- Spaces = Word Count\r\n- Periods = Sentence count. \r\n- Letter Density\r\n    - Reduce over string and increase count based on letter (MDN has example i think). \r\n- Time Read = Need to come up with equation. Word count / avg words read a minute? Round up to closest minute. 180/min\r\n\r\nOut put should be one data object. \r\n\r\n*/\r\n\r\nexport let stats = {\r\n  characters: 0,\r\n  words: 0,\r\n  sentences: 0,\r\n  readtime: 0,\r\n  density: {},\r\n};\r\n\r\nexport function compileStats(obj) {\r\n  console.log(\"compileStat Function is called!\");\r\n  charCount(obj.input, obj.spaces);\r\n  wordCount(obj.input);\r\n  sentenceCount(obj.input);\r\n  readTime(stats.words);\r\n  letterDensity(obj.input);\r\n  // console.log(stats);\r\n  return stats;\r\n}\r\n\r\nfunction charCount(string, spaces = false) {\r\n  const spacesCount = string.split(\" \").length - 1;\r\n  const characterCount = string.length;\r\n\r\n  stats.characters = spaces ? characterCount - spacesCount : characterCount;\r\n}\r\n\r\nfunction wordCount(string) {\r\n  const words = string.trim().split(\" \").length;\r\n\r\n  stats.words = words;\r\n}\r\n\r\nfunction sentenceCount(string) {\r\n  const sentences = string.trim().split(/[.!?]/).length - 1;\r\n\r\n  stats.sentences = sentences;\r\n}\r\n\r\nfunction readTime(num) {\r\n  const time = +(num / 180).toFixed(2);\r\n\r\n  stats.readtime = time;\r\n}\r\n\r\nfunction letterDensity(string) {\r\n  stats.density = {};\r\n  const characterCount = string.length - (string.split(\" \").length - 1);\r\n\r\n  const letters = string\r\n    .toLowerCase()\r\n    .split(\"\")\r\n    .filter((l) => !/[ .!?]/.test(l));\r\n\r\n  for (const letter of letters) {\r\n    let letterStat = stats.density[letter];\r\n\r\n    if (!letterStat) {\r\n      letterStat = {\r\n        count: 0,\r\n        percent: 0,\r\n      };\r\n      stats.density[letter] = letterStat;\r\n    }\r\n\r\n    letterStat.count++;\r\n    letterStat.percent = +(\r\n      stats.density[letter].count / characterCount\r\n    ).toFixed(2);\r\n  }\r\n}\r\n","import darkLogo from \"../../../assets/images/logo-dark-theme.svg\";\r\nimport lightLogo from \"../../../assets/images/logo-light-theme.svg\";\r\nimport sunIcon from \"../../../assets/images/icon-sun.svg\";\r\nimport moonIcon from \"../../../assets/images/icon-moon.svg\";\r\n\r\nclass ModeToggleView {\r\n  _toggle = document.querySelector(\".header-toggle\");\r\n  _toggleIcon = document.querySelector(\".header-toggle__icon\");\r\n  _bodyElement = document.querySelector(\"body\");\r\n  _logoElement = document.querySelector(\".header-logo\");\r\n\r\n  _display = {\r\n    mode: \"dark\",\r\n    logos: {\r\n      dark: darkLogo,\r\n      light: lightLogo,\r\n    },\r\n    icons: {\r\n      dark: sunIcon,\r\n      light: moonIcon,\r\n    },\r\n  };\r\n\r\n  addToggleEventHandler(eventFunction) {\r\n    this._toggle.addEventListener(\"click\", eventFunction);\r\n  }\r\n\r\n  _toggleModeElements() {\r\n    this._toggleIcon.setAttribute(\r\n      \"src\",\r\n      this._display.icons[this._display.mode]\r\n    );\r\n\r\n    this._logoElement.setAttribute(\r\n      \"src\",\r\n      this._display.logos[this._display.mode]\r\n    );\r\n  }\r\n\r\n  changeMode() {\r\n    const isDark = !this._bodyElement.dataset.theme;\r\n\r\n    if (isDark) {\r\n      this._bodyElement.dataset.theme = \"light\";\r\n      this._display.mode = \"light\";\r\n    } else {\r\n      delete this._bodyElement.dataset.theme;\r\n      this._display.mode = \"dark\";\r\n    }\r\n\r\n    this._toggleModeElements();\r\n  }\r\n}\r\n\r\nexport default new ModeToggleView();\r\n","module.exports = new __parcel__URL__(\"logo-dark-theme.0a964e4a.svg\").toString();","module.exports = new __parcel__URL__(\"logo-light-theme.61e66f6c.svg\").toString();","module.exports = new __parcel__URL__(\"icon-sun.303e5cfc.svg\").toString();","module.exports = new __parcel__URL__(\"icon-moon.340264e4.svg\").toString();","class InputView {\r\n  _input = document.querySelector(\".input-textarea\");\r\n  _spacesOption = document.querySelector(\"#spaces\");\r\n  _characterOption = document.querySelector(\"#limit\");\r\n  _limit = document.querySelector(\"#limit-count\");\r\n  _errorElement = document.querySelector(\".error-message\");\r\n\r\n  _inputData = {\r\n    input: null,\r\n    spaces: false,\r\n    limit: null,\r\n    error: false,\r\n  };\r\n\r\n  constructor() {\r\n    this._init();\r\n  }\r\n\r\n  _init() {\r\n    this._characterOption.addEventListener(\r\n      \"change\",\r\n      this._toggleCharacterLimit.bind(this)\r\n    );\r\n\r\n    this._limit.addEventListener(\"change\", this._setCharacterLimit.bind(this));\r\n\r\n    this._input.addEventListener(\"keyup\", this._getInputString.bind(this));\r\n\r\n    this._spacesOption.addEventListener(\r\n      \"change\",\r\n      this._toggleExcludeSpaces.bind(this)\r\n    );\r\n  }\r\n\r\n  addHandlerSendInputData(handler) {\r\n    [this._characterOption, this._limit, this._spacesOption].map((element) =>\r\n      element.addEventListener(\"change\", handler)\r\n    );\r\n\r\n    this._input.addEventListener(\"keyup\", handler);\r\n  }\r\n\r\n  getInputData() {\r\n    return this._inputData;\r\n  }\r\n\r\n  _toggleExcludeSpaces() {\r\n    this._inputData.spaces = !this._inputData.spaces;\r\n    // console.log(this._inputData);\r\n  }\r\n\r\n  _toggleCharacterLimit() {\r\n    if (this._characterOption.checked) {\r\n      this._limit.classList.remove(\"hide\");\r\n    } else {\r\n      this._limit.classList.add(\"hide\");\r\n      this._inputData.limit = null;\r\n\r\n      this._limit.value = \"\";\r\n    }\r\n    this._toggleError();\r\n    // console.log(this._inputData);\r\n  }\r\n\r\n  _setCharacterLimit() {\r\n    const characterLimit = this._limit.valueAsNumber;\r\n    characterLimit !== NaN && (this._inputData.limit = characterLimit);\r\n\r\n    this._toggleError();\r\n  }\r\n\r\n  _getInputString() {\r\n    const inputString = this._input.value;\r\n    this._inputData.input = inputString;\r\n\r\n    this._toggleError();\r\n  }\r\n\r\n  _toggleError() {\r\n    const str = this._inputData.input;\r\n    const limit = this._inputData.limit;\r\n\r\n    if (!Number.isFinite(limit) || !str) {\r\n      this._input.classList.remove(\"invalid\");\r\n      this._inputData.error = false;\r\n      return;\r\n    }\r\n\r\n    if (str.length > limit) {\r\n      this._markupError();\r\n      this._input.classList.add(\"invalid\");\r\n      this._inputData.error = true;\r\n      return;\r\n    }\r\n\r\n    this._input.classList.remove(\"invalid\");\r\n    this._inputData.error = false;\r\n  }\r\n\r\n  _markupError() {\r\n    this._errorElement.textContent = `ⓘ Limit reached! Your text exceeds ${this._inputData.limit} characters.`;\r\n  }\r\n}\r\n\r\nexport default new InputView();\r\n","/*\r\nFor the Reading time, and number counters we can just render those with basic innerText methods. \r\n\r\nLetter density and see more will be trickier. Initial approach:\r\n    - Take density data object and map through with html, and append to parent conatiner.\r\n    - Set a max height for density container and set overflow to hidden. When See more is clicked we update the styling to fit-content. Seems simple enough. \r\n\r\n*/\r\n\r\nclass StatsView {\r\n  _readingTime = document.querySelector(\"#reading-time\");\r\n  _characters = document.querySelector(\"#characters\");\r\n  _words = document.querySelector(\"#words\");\r\n  _sentences = document.querySelector(\"#sentences\");\r\n\r\n  _densityContainer = document.querySelector(\".letters__container\");\r\n  _noCharacterMessage = document.querySelector(\"#no-characters\");\r\n  _seeMoreElement = document.querySelector(\".see-more\");\r\n\r\n  constructor() {\r\n    this._seeMoreElement.addEventListener(\"click\", this._showMore.bind(this));\r\n  }\r\n\r\n  renderStatistics(dataStatsObj) {\r\n    const { characters, words, sentences, readtime, density } = dataStatsObj;\r\n    this._renderReadingTime(readtime);\r\n    this._renderCountNumbers(characters, words, sentences);\r\n    this._renderDensity(density);\r\n  }\r\n\r\n  _renderReadingTime(num) {\r\n    this._readingTime.textContent = num < 1 ? \"<1\" : Math.ceil(num);\r\n  }\r\n\r\n  _renderCountNumbers(characters = 0, words = 0, sentences = 0) {\r\n    this._characters.textContent = characters;\r\n    this._words.textContent = words;\r\n    this._sentences.textContent = sentences;\r\n  }\r\n\r\n  _showMore() {\r\n    const isOpen = Boolean(+this._seeMoreElement.dataset.open);\r\n    console.log(isOpen);\r\n    if (!isOpen) {\r\n      this._densityContainer.style.maxHeight = \"fit-content\";\r\n      this._seeMoreElement.textContent = \"See less\";\r\n      this._seeMoreElement.dataset.open = 1;\r\n    }\r\n\r\n    if (isOpen) {\r\n      console.log(isOpen);\r\n      this._densityContainer.style.cssText = \"\";\r\n      this._seeMoreElement.textContent = \"See more\";\r\n      this._seeMoreElement.dataset.open = 0;\r\n    }\r\n  }\r\n\r\n  _renderDensity(obj) {\r\n    const sortedLetters = Object.keys(obj)\r\n      .map((letter) => ({ letter, ...obj[letter] }))\r\n      .sort((a, b) => b.count - a.count);\r\n\r\n    console.log(sortedLetters);\r\n\r\n    const lettersHTML = sortedLetters\r\n      .map((l) => {\r\n        const { letter, count, percent } = l;\r\n        return `\r\n      <div class=\"letters__item\">\r\n        <p class=\"label letters__letter\">${letter.toUpperCase()}</p>\r\n        <div class=\"letters__bar\">\r\n            <div class=\"letters__bar--fill\" style=\"width: ${\r\n              percent * 100\r\n            }%\"></div>\r\n        </div>\r\n        <p class=\"label letters__percent\">${count} (${(percent * 100).toFixed(\r\n          2\r\n        )}%)</p>\r\n      </div>\r\n      `;\r\n      })\r\n      .join(\" \");\r\n\r\n    /* Possible refactor into own function */\r\n    this._densityContainer.classList.remove(\"hide\");\r\n    this._noCharacterMessage.classList.add(\"hide\");\r\n    this._seeMoreElement.classList.remove(\"hide\");\r\n    /* ------ */\r\n\r\n    this._densityContainer.innerHTML = \"\";\r\n    this._densityContainer.insertAdjacentHTML(\"beforeend\", lettersHTML);\r\n  }\r\n\r\n  clearStatistics() {\r\n    this._densityContainer.classList.add(\"hide\");\r\n    this._noCharacterMessage.classList.remove(\"hide\");\r\n    this._seeMoreElement.classList.add(\"hide\");\r\n\r\n    this._renderCountNumbers();\r\n  }\r\n}\r\nexport default new StatsView();\r\n"],"names":["$parcel$interopDefault","a","__esModule","default","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","Object","defineProperty","get","$18c11f3350a906ea$export$6503ec6e8aabbaf","set","v","enumerable","configurable","$18c11f3350a906ea$var$mapping","Map","baseUrl","manifest","i","length","path","URL","url","toString","JSON","parse","$0f1d4402dffacf5b$export$7804429c45dff272","characters","words","sentences","readtime","density","$6b59893396abafda$exports","$2b17e3e0fea969d0$exports","$4f144ae6385fdc83$exports","$6df386e07576f960$exports","$28639d494b9d66f0$var$ModeToggleView","_toggle","document","querySelector","_toggleIcon","_bodyElement","_logoElement","_display","mode","logos","dark","light","icons","addToggleEventHandler","eventFunction","addEventListener","_toggleModeElements","setAttribute","changeMode","dataset","theme","$28639d494b9d66f0$export$2e2bcd8739ae039","$54207738217c2206$var$InputView","_input","_spacesOption","_characterOption","_limit","_errorElement","_inputData","input","spaces","limit","error","constructor","_init","_toggleCharacterLimit","bind","_setCharacterLimit","_getInputString","_toggleExcludeSpaces","addHandlerSendInputData","handler","map","element","getInputData","checked","classList","remove","add","value","_toggleError","characterLimit","valueAsNumber","inputString","str","Number","isFinite","_markupError","textContent","$54207738217c2206$export$2e2bcd8739ae039","$fd3b802b6fc95ceb$var$StatsView","_readingTime","_characters","_words","_sentences","_densityContainer","_noCharacterMessage","_seeMoreElement","_showMore","renderStatistics","dataStatsObj","_renderReadingTime","_renderCountNumbers","_renderDensity","num","Math","ceil","isOpen","Boolean","open","console","log","style","maxHeight","cssText","obj","sortedLetters","keys","letter","sort","b","count","lettersHTML","l","percent","toUpperCase","toFixed","join","innerHTML","insertAdjacentHTML","clearStatistics","$fd3b802b6fc95ceb$export$2e2bcd8739ae039","$f50bd1f2915ed0f2$var$controlRenderStats","data","warn","dataStats","$0f1d4402dffacf5b$var$charCount","string","spacesCount","split","characterCount","$0f1d4402dffacf5b$var$wordCount","trim","$0f1d4402dffacf5b$var$sentenceCount","$0f1d4402dffacf5b$var$readTime","time","$0f1d4402dffacf5b$var$letterDensity","toLowerCase","filter","test","letterStat"],"version":3,"file":"index.68b31f4a.js.map"}